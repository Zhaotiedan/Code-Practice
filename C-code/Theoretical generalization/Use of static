1.修饰全局变量：
    概念：在全局变量前加关键字static，全局变量就定义成一个全局静态变量.
    作用域：全局变量原本是在整个工程文件内有效，让它只在定义它的文件中有效。
    初始化：会被自动初始化为0
  
2.修饰局部变量
    概念：在局部变量之前加关键字static，局部变量就成为一个局部静态变量,
    作用域：让它只在定义它的函数内有效。
    初始化：会被自动初始化为0
    生命周期：且程序仅分配一次内存，函数返回后，该变量不会消失，保留在内存中
    eg：
    void count()
    {
        /*声明一个静态局部变量*/
        static num = 0;
        num++;
        printf("%d\n",num);
    }
在该代码中，我们通过在 count() 函数里声明一个静态局部变量 num 来作为计数器。因为静态局部变量是在编译时赋初值的，且只赋初值一次，在程序运行时它已有初值。
以后在每次调用函数时就不再重新赋初值，而是保留上次函数调用结束时的值。这样，count() 函数每次被调用的时候，静态局部变量 num 就会保持上一次调用的值，然后再执行自增运算，
这样就实现了计数功能。同时，它又避免了使用全局变量。

3.修饰函数
    函数变成静态函数，只在声明它的cpp文件中起作用，不能被其他文件所用。所以不会与其他cpp文件中的同名函数起冲突
	
4.修饰类的成员
    称为类的静态成员，可供类中所有成员所使用，且必须在类外初始化
	
5.修饰类的函数
     称为类的静态函数
     在静态成员函数的实现中不能直接引用类中说明的非静态成员，可以引用类中说明的静态成员，
     如果静态成员函数中要引用非静态成员时，可通过对象来引用。
     调用静态成员函数使用如下格式：<类名>::<静态成员函数名>(<参数表>);
